<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGBgAAAEAIACICQAAFgAAACgAAAAYAAAAMAAAAAEAIAAAAAAAAAkAAKYAAACmAAAAAAAAAAAA
        AAD///8A////AP///wD///8AHpD/kR6Q//4dkP+c////AB+P/0sekP/0HpD/3SSS/w4kkv8OHpD/3R6Q
        //Qfj/9L////AB2Q/5wekP/+HpD/kf///wD///8A////AP///wD///8A////AP///wD///8AHpD/2B6Q
        //8ekP/o////AB6Q/4gekP//HpD//yCS/zggkv84HpD//x6Q//8ekP+I////AB6Q/+gekP//HpD/2P//
        /wD///8A////AP///wD///8A////AFVVVQNxVy1PSnORyEZ1mtpHdJXPcVgsaFRte6RGdZraRnWa2mFj
        VYFhY1WBRnWa2kZ1mtpUbXukcVgsaEd0lc9Hc5PcUGFg3GNOJIZVVSsG////AP///wD///8A////AHFX
        LU9yWC3/clgt/3JYLf9yWC3/clgt/3JYLf9yWC3/clgt/3JYLf9yWC3/clgt/3JYLf9yWC3/clgt/3JY
        Lf9yWC3/ZVAl/1lIHf9jTiSG////AP///wAekP+RHpD/2EpzksdyWC3/clgt/3JYLf9yWC3/clgt/3JY
        Lf9yWC3/clgt/3JYLf9yWC3/clgt/3JYLf9yWC3/clgt/3JYLf9yWC3/aFEm/1lIHf9YVlveOm3/2Dpt
        /5EekP/+HpD//0Z1mtpyWC3/clgt/3JYLf9yWC3/clgt/3JYLf9yWC3/clgt/3JYLf9yWC3/clgt/3JY
        Lf9yWC3/clgt/3JYLf9yWC3/aFEm/1lIHf9YVmLpOm3//zpt//4dkP+cHpD/6Eh0ls5yWC3/clgt/3JY
        Lf80i8z/IJP8/yCT/P8gk/z/IJP8/yCT/P8gk/z/IJP8/yuQ4v9uWzf/clgt/3JYLf9yWC3/aFEm/1lI
        Hf9YVl3jOm3/6Dlu/5z///8A////AHFYLGhyWC3/clgt/3JYLf8qoev/Iqn//yKp//8iqf//Iqn//yKp
        //8ipP//HpH//x6Q//8nkuv/bls3/3JYLf9yWC3/aFEm/1lIHf9iTiKm////AP///wAfj/9LHpD/iFRt
        eaRyWC3/clgt/3JYLf8tpuX/JLH//ySx//8ksf//JLH//ySx//8ksf//Iqj//x6R//8ekP//J5Lr/25b
        N/9yWC3/aFEm/1lIHf9bVEvJOm3/iDpt/0sekP/0HpD//0Z1mtpyWC3/clgt/3JYLf8tpuX/JLH//ySx
        //8ksf//JLH//ySx//8ksf//JLH//yKo//8ekf//HpD//yuQ4v9yWC3/aFEm/1lIHf9YVmLpOm3//zlt
        //QekP/dHpD//0d2mtlyWC3/clgt/3JYLf8tpuX/JLH//zqYxP9eb2P/NZ3Q/1N8gf8ksf//OJrI/1p0
        b/85kcL/HpD//yCT/P9yWC3/aFEm/1lIHf9YVmLpOm3//zps/90kkv8OIJL/OGFjVYFyWC3/clgt/3JY
        Lf8tpuX/JLH//09/iv89lbz/PpO5/2FrWv8sqOn/TYKQ/z+Stv9Qf4n/HpL//yCT/P9yWC3/aFEm/1lI
        Hf9fUTS0O23/ODdt/w4kkv8OIJL/OGFjVYFyWC3/clgt/3JYLf8tpuX/JLH//06Bjf88lsD/PJbA/2Fr
        Wf9bcmv/ToKP/z+St/9Qf4j/HpL//yCT/P9yWC3/aFEm/1lIHf9fUTS0O23/ODdt/w4ekP/dHpD//0d2
        mtlyWC3/clgt/3JYLf8tpuX/JLH//zaczv9bcmv/N5zN/1l1cf9Jh5z/RYul/zmZxv9HiaD/HpL//yCT
        /P9yWC3/aFEm/1lIHf9YVmLpOm3//zps/90ekP/0HpD//0Z1mtpyWC3/clgt/3JYLf8tpuX/JLH//ySx
        //8ksf//JLH//ySx//8ksf//JLH//ySx//8ksf//HpL//yCT/P9yWC3/aFEm/1lIHf9YVmLpOm3//zlt
        //Qfj/9LHpD/iFRteaRyWC3/clgt/3JYLf8tpuX/JLH//ySx//8ksf//JLH//ySx//8ksf//JLH//ySx
        //8ksf//HpL//yCT/P9yWC3/aFEm/1lIHf9bVEvJOm3/iDpt/0v///8A////AHFYLGhyWC3/clgt/3JY
        Lf8tpuX/JLH//ySx//8ksf//JLH//ySx//8ksf//JLH//ySx//8ksf//HpL//yCT/P9yWC3/aFEm/1lI
        Hf9iTiKm////AP///wAdkP+cHpD/6Eh0ls5yWC3/clgt/3JYLf9LhZf/Labl/y2m5f8tpuX/Labl/y2m
        5f8tpuX/Labl/y2m5f8tpuX/IZT6/zSLzP9yWC3/aFEm/1lIHf9YVl3jOm3/6Dlu/5wekP/+HpD//0Z1
        mtpyWC3/clgt/3JYLf9yWC3/clgt/3JYLf9yWC3/clgt/3JYLf9yWC3/clgt/3JYLf9yWC3/clgt/3JY
        Lf9yWC3/aFEm/1lIHf9YVmLpOm3//zpt//4ekP+RHpD/2EpzksdyWC3/clgt/3JYLf9yWC3/clgt/3JY
        Lf9yWC3/clgt/3JYLf9yWC3/clgt/3JYLf9yWC3/clgt/3JYLf9yWC3/aFEm/1lIHf9YVlveOm3/2Dpt
        /5H///8A////AHFXLU9yWC3/clgt/3JYLf9yWC3/clgt/3JYLf9yWC3/clgt/3JYLf9yWC3/clgt/3JY
        Lf9yWC3/clgt/3JYLf9yWC3/ZVAl/1lIHf9jTiSG////AP///wD///8A////AFVVVQNxVy1PSnORyEZ1
        mtpHdJXPcVgsaFRte6RGdZraRnWa2mFjVYFhY1WBRnWa2kZ1mtpUbXukcVgsaEd0lc9Hc5PcUGFg3GNO
        JIZVVSsG////AP///wD///8A////AP///wD///8AHpD/2B6Q//8ekP/o////AB6Q/4gekP//HpD//yCS
        /zggkv84HpD//x6Q//8ekP+I////AB6Q/+gekP//HpD/2P///wD///8A////AP///wD///8A////AP//
        /wD///8AHpD/kR6Q//4dkP+c////AB+P/0sekP/0HpD/3SSS/w4kkv8OHpD/3R6Q//Qfj/9L////AB2Q
        /5wekP/+HpD/kf///wD///8A////AP///wDxAI8A8QCPAMAAAwDAAAMAAAAAAAAAAAAAAAAAwAADAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAADAAAAAAAAAAAAAAAAAMAAAwDAAAMA8QCPAPEA
        jwA=
</value>
  </data>
</root>